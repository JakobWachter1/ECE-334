// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef gui_h
#define gui_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Return_Button.H>


class GUI {
public:
	GUI();
  Fl_Double_Window *uiw;
private:
  inline void cb_DBG_i(Fl_Button*, void*);
  static void cb_DBG(Fl_Button*, void*);
  inline void cb_LightRotate_i(Fl_Button*, void*);
  static void cb_LightRotate(Fl_Button*, void*);
  inline void cb_LightSide_i(Fl_Button*, void*);
  static void cb_LightSide(Fl_Button*, void*);
  inline void cb_LightTop_i(Fl_Button*, void*);
  static void cb_LightTop(Fl_Button*, void*);
  inline void cb_LightBrighten_i(Fl_Button*, void*);
  static void cb_LightBrighten(Fl_Button*, void*);
  inline void cb_LightDim_i(Fl_Button*, void*);
  static void cb_LightDim(Fl_Button*, void*);
  inline void cb_SM2_i(Fl_Button*, void*);
  static void cb_SM2(Fl_Button*, void*);
  inline void cb_SM3_i(Fl_Button*, void*);
  static void cb_SM3(Fl_Button*, void*);
  inline void cb_Color_i(Fl_Button*, void*);
  static void cb_Color(Fl_Button*, void*);
public:
  void show();
  void DBG_cb();
  void LightRotate_cb();
  void LightSide_cb();
  void LightTop_cb();
  void LightBrighten_cb();
  void LightDim_cb();
  void SM2_cb();
  void SM3_cb();
  void Color_cb();





};
#endif
