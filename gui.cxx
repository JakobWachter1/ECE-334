// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "gui.h"

void GUI::cb_DBG_i(Fl_Button*, void*) {
  DBG_cb();
}
void GUI::cb_DBG(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_DBG_i(o,v);
}

void GUI::cb_LightRotate_i(Fl_Button*, void*) {
    LightRotate_cb();
}
void GUI::cb_LightRotate(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_LightRotate_i(o, v);
}

void GUI::cb_LightSide_i(Fl_Button*, void*) {
    LightSide_cb();
}
void GUI::cb_LightSide(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_LightSide_i(o, v);
}

void GUI::cb_LightTop_i(Fl_Button*, void*) {
    LightTop_cb();
}
void GUI::cb_LightTop(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_LightTop_i(o, v);
}

void GUI::cb_LightBrighten_i(Fl_Button*, void*) {
    LightBrighten_cb();
}
void GUI::cb_LightBrighten(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_LightBrighten_i(o, v);
}

void GUI::cb_LightDim_i(Fl_Button*, void*) {
    LightDim_cb();
}
void GUI::cb_LightDim(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_LightDim_i(o, v);
}

void GUI::cb_SM2_i(Fl_Button*, void*) {
    SM2_cb();
}
void GUI::cb_SM2(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_SM2_i(o, v);
}

void GUI::cb_SM3_i(Fl_Button*, void*) {
    SM3_cb();
}
void GUI::cb_SM3(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_SM3_i(o, v);
}

void GUI::cb_Color_i(Fl_Button*, void*) {
    Color_cb();
}
void GUI::cb_Color(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_Color_i(o, v);
}



#include "scene.h"


GUI::GUI() {
  { uiw = new Fl_Double_Window(400, 197, "GUI");
    uiw->user_data((void*)(this));
    { 
        Fl_Button* o = new Fl_Button(15, 15, 80, 30, "SM1");
        o->callback((Fl_Callback*)cb_DBG);
    } 
    {
        Fl_Button* o = new Fl_Button(15, 45, 80, 30, "Light Rotate");
        o->callback((Fl_Callback*)cb_LightRotate);
    }
    {
        Fl_Button* o = new Fl_Button(15, 75, 80, 30, "Light Side");
        o->callback((Fl_Callback*)cb_LightSide);
    }
    {
        Fl_Button* o = new Fl_Button(15, 105, 80, 30, "Light Top");
        o->callback((Fl_Callback*)cb_LightTop);
    }
    {
        Fl_Button* o = new Fl_Button(15, 135, 80, 30, "Light Brighten");
        o->callback((Fl_Callback*)cb_LightBrighten);
    }
    {
        Fl_Button* o = new Fl_Button(15, 165, 80, 30, "Light Dim");
        o->callback((Fl_Callback*)cb_LightDim);
    }
    {
        Fl_Button* o = new Fl_Button(100, 15, 80, 30, "SM2");
        o->callback((Fl_Callback*)cb_SM2);
    }
    {
        Fl_Button* o = new Fl_Button(100, 45, 80, 30, "SM3");
        o->callback((Fl_Callback*)cb_SM3);
    }
    {
        Fl_Button* o = new Fl_Button(100, 75, 80, 30, "Color");
        o->callback((Fl_Callback*)cb_Color);
    }
    
    uiw->end();
  } // Fl_Double_Window* uiw
}

int main(int argc, char **argv) {
  scene = new Scene;
  return Fl::run();
}

void GUI::show() {
  uiw->show();
}

void GUI::DBG_cb() {
  scene->SM1();
}

void GUI::LightRotate_cb() {
  scene->LightRotate();
}

void GUI::LightSide_cb() {
    scene->LightSide();
}

void GUI::LightTop_cb() {
    scene->LightTop();
}

void GUI::LightBrighten_cb() {
    scene->LightBrighten();
}

void GUI::LightDim_cb() {
    scene->LightDim();
}

void GUI::SM2_cb() {
    scene->SM2();
}

void GUI::SM3_cb() {
    scene->SM3();
}

void GUI::Color_cb() {
    scene->Color();
}



